[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Moneyball: Visualizations of Baseball Salaries and Wins",
    "section": "",
    "text": "Preface\nWelcome to our report - a summary of what statistics have affected wins over the long history of baseball. You’ll find interesting graphs, fun data, and a great read in this report!",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "1  Report",
    "section": "",
    "text": "1.0.1 Introduction\nBaseball is one of the most popular sports in the US with millions of viewers each year. There are many factors that contribute to team wins and we would like to explore potential factors contributing to these wins. With this popularity comes a plethora of interesting data, from batting averages to different measures of success in the field to All-Star players per team. Using this data going as far back as the 1870s, we decided to look into what factors can predict team wins over time. With billions of dollars pouring into the MLB (Major League Baseball) each year, finding potential predictors of which teams will win is quite literally a billion dollar question. Throughout this report, we will explore different relationships between the variable wins and several predictor variables.\nIn order to best understand this report, a few terms must be clarified. Firstly, wins refer to the number of games won by a team, while losses refers to the number of games lost by a team. A strikeout is when the pitcher throws three strikes, valid pitches that the batter does not hit, causing the batter to be out and finished with their batting turn. Finally, batting average is a decimal value representing the number of successful hits made by a single batter divided by their total number of hitting attempts.\nThis data was acquired from Kaggle. This data set, titled ‘The History of Baseball’ is a reformatted version of a famous data set by Sean Lahman. This data, originally published in the 1990s was the first of its kind, making raw baseball data accessible to the public. This data was most recently updated for the 2015 season, and contains data between 2015 and 1871. Lahman’s data set is actually a collection of several data sets, ranging from pitching data, to data on team managers. For our analysis, we focus on the pitching and batting data sets, which contain information on wins, losses, pitching stats, batting stats, and salary information per player per year. In order to complete our analysis, we have joined the batting and pitching data sets together, added a new variable batting_avg, and cleaned the variable names. The variables are a mix between categorical (player names, team names, etc) and quantitative (wins, losses, batting average, etc). # MLB Team Abbreviations Reference Guide\n\n\n\n1.0.2 American League\n\n\n\nAbbreviation\nTeam Name\n\n\n\n\nANA\nAnaheim Angels\n\n\nBAL\nBaltimore Orioles\n\n\nBOS\nBoston Red Sox\n\n\nCAL\nCalifornia Angels\n\n\nCHA\nChicago White Sox\n\n\nCLE\nCleveland Indians\n\n\nDET\nDetroit Tigers\n\n\nKCA\nKansas City Athletics\n\n\nLAA\nLos Angeles Angels\n\n\nMIN\nMinnesota Twins\n\n\nNYA\nNew York Yankees\n\n\nOAK\nOakland Athletics\n\n\nSEA\nSeattle Mariners\n\n\nTBA\nTampa Bay Rays\n\n\nTEX\nTexas Rangers\n\n\nTOR\nToronto Blue Jays\n\n\n\n\n\n1.0.3 \n\n\n\nAbbreviation\nTeam Name\n\n\n\n\nARI\nArizona Diamondbacks\n\n\nATL\nAtlanta Braves\n\n\nCHN\nChicago Cubs\n\n\nCIN\nCincinnati Reds\n\n\nCOL\nColorado Rockies\n\n\nFLO\nFlorida Marlins\n\n\nHOU\nHouston Astros\n\n\nLAN\nLos Angeles Dodgers\n\n\nMIA\nMiami Marlins\n\n\nMIL\nMilwaukee Brewers\n\n\nML4\nMilwaukee Brewers\n\n\nMON\nMontreal Expos\n\n\nNYN\nNew York Mets\n\n\nPHI\nPhiladelphia Phillies\n\n\nPIT\nPittsburgh Pirates\n\n\nSDN\nSan Diego Padres\n\n\nSFN\nSan Francisco Giants\n\n\nSLN\nSt. Louis Cardinals\n\n\nWAS\nWashington Nationals\n\n\n\n\n\n\n1.0.4 Looking at Wins vs Losses\nFirst, we will look at the relationship between wins and losses per team in the 1870s.\n\n\n\n\n\n\nLooking at this visualization of baseball team performance in the 2000s, several interesting patterns emerge. The data reveals a generally competitive era in baseball, with most teams maintaining relatively balanced win-loss ratios. BRK1 stands out as a particularly successful team with around 50 wins and comparatively fewer losses, while teams like BL1 and BSN show more evenly matched records. Intriguingly, there’s significant variation in the total number of games played across teams, with the WS3-WS6 teams consistently showing lower game counts, possibly indicating partial seasons or specific competition subsets. The similar patterns between teams with related names (like CL1 and CL2) suggest potential franchise relationships or organizational changes during this period. Overall, the data paints a picture of a competitive baseball landscape in the 2000s, where extreme dominance or poor performance was rare, and most teams maintained relatively stable performance levels.\n\n\n1.0.5 The Relationship Between Strikeouts and Wins\nNext, we look at the relationship between strikeouts and wins overall.\n\n\n\n\n\n\n\n\n\nThe scatter plot analyzing the relationship between strikeouts and wins in baseball since 1985 reveals several fascinating patterns. A clear positive correlation exists, as indicated by the blue trend line, showing that pitchers who record more strikeouts generally secure more wins. The data displays distinct horizontal banding, reflecting the discrete nature of baseball wins, with most pitchers recording between 50-250 strikeouts and winning between 0-25 games per season. Notably, while the relationship between strikeouts and wins is strong, the increasing spread of data points at higher strikeout counts suggests that other factors also influence a pitcher’s win total. Some remarkable outliers exist, particularly among pitchers with 300+ strikeouts, highlighting exceptional performances that deviate from the typical pattern. This visualization effectively demonstrates that while strikeout ability is a good predictor of winning games, it’s not the only factor determining a pitcher’s success.\n\n\n1.0.6 Team Salary Distribution by Decade\nFinally, we look at the distributions of salary per team across the decades.\n\n\n\n\n\n\n\n\n\nMostly surprising was the lowest spenders, some of whom have spent barely half as much as the higher value teams. Viewers should understand the direct effects of salary distribution on the lack of parity in the league. The extreme salary differentials are a significant reason why some teams win a lot, while others are bottom-dwellers.\n\n\n1.0.7 Conclusion/Big Picture\nAll of our team’s plots helped further explore what contributes to teams’ success in baseball. By examining the effects of different variables on win outcomes, we were able to draw many conclusions about what helped and hindered teams in MLB over a long period of time.\nIf our group had time to extend our research, furthering our knowledge of the data would allow us to improve clarity in our graphs. Figuring out how to build in the Shiny aspect would have been a great addition as well.\nA weakness is how cluttered the dataset was. With so much information, it was often difficult to highlight specific patterns within the data or to find clear relationships between a small number of variables. If it was neater, it would been easier to use.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Report</span>"
    ]
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "Title: Moneyball: Visualizations of Baseball Salaries.\nGroup members: Huthaifa Mohammad, Sidney Langford, Suweda Said, Basir Talayee, Harlan Grady\nDescription: We aim to look at the relationship between player salary and game stats. Some of these stats include: batting average, pitching stats, and fielding stats. If we have more time, we can also look at how team wins/losses affect player salary.\nInspirations: Since we are a group interested in sports, we decided to choose a baseball dataset since baseball is one of the most stats-heavy professional sports. With a plethora of data to work with, we plan on exploring our many interests while still creating a cohesive project.\nPlan:\nWednesday 11/13: Complete sketch\nFriday 11/15: Create basic visualizations/better understand the data\nMonday 11/18: Finalize research question + finish wrangling the data\nFriday 11/22: Finalize Visualizations\nMonday 11/25: Finalize Presentation/Report\nWednesday-Friday 11/27-11/29: Thanksgiving break\nMonday 12/2: Last edits on presentation\n12/9-12/13: Revise/film final presentation",
    "crumbs": [
      "Appendices",
      "Proposal"
    ]
  },
  {
    "objectID": "Basir.html",
    "href": "Basir.html",
    "title": "Appendix A — BasirVis",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# import Data\nHistory_of_Baseball &lt;- read_csv(\"data/The History of Baseball dataset/hall_of_fame.csv\")\n\nRows: 4120 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): player_id, votedby, inducted, category, needed_note\ndbl (4): yearid, ballots, needed, votes\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstr(History_of_Baseball)\n\nspc_tbl_ [4,120 × 9] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ player_id  : chr [1:4120] \"cobbty01\" \"ruthba01\" \"wagneho01\" \"mathech01\" ...\n $ yearid     : num [1:4120] 1936 1936 1936 1936 1936 ...\n $ votedby    : chr [1:4120] \"BBWAA\" \"BBWAA\" \"BBWAA\" \"BBWAA\" ...\n $ ballots    : num [1:4120] 226 226 226 226 226 226 226 226 226 226 ...\n $ needed     : num [1:4120] 170 170 170 170 170 170 170 170 170 170 ...\n $ votes      : num [1:4120] 222 215 215 205 189 146 133 111 105 80 ...\n $ inducted   : chr [1:4120] \"Y\" \"Y\" \"Y\" \"Y\" ...\n $ category   : chr [1:4120] \"Player\" \"Player\" \"Player\" \"Player\" ...\n $ needed_note: chr [1:4120] NA NA NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   player_id = col_character(),\n  ..   yearid = col_double(),\n  ..   votedby = col_character(),\n  ..   ballots = col_double(),\n  ..   needed = col_double(),\n  ..   votes = col_double(),\n  ..   inducted = col_character(),\n  ..   category = col_character(),\n  ..   needed_note = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nhead(History_of_Baseball)\n\n# A tibble: 6 × 9\n  player_id yearid votedby ballots needed votes inducted category needed_note\n  &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;      \n1 cobbty01    1936 BBWAA       226    170   222 Y        Player   &lt;NA&gt;       \n2 ruthba01    1936 BBWAA       226    170   215 Y        Player   &lt;NA&gt;       \n3 wagneho01   1936 BBWAA       226    170   215 Y        Player   &lt;NA&gt;       \n4 mathech01   1936 BBWAA       226    170   205 Y        Player   &lt;NA&gt;       \n5 johnswa01   1936 BBWAA       226    170   189 Y        Player   &lt;NA&gt;       \n6 lajoina01   1936 BBWAA       226    170   146 N        Player   &lt;NA&gt;       \n\n\n2.3 Pitching table\nplayerID Player ID code yearID Year stint player’s stint (order of appearances within a season) teamID Team lgID League W Wins L Losses G Games GS Games Started CG Complete Games SHO Shutouts SV Saves IPOuts Outs Pitched (innings pitched x 3) H Hits ER Earned Runs HR Homeruns BB Walks SO Strikeouts BAOpp Opponent’s Batting Average ERA Earned Run Average IBB Intentional Walks WP Wild Pitches HBP Batters Hit By Pitch BK Balks BFP Batters faced by Pitcher GF Games Finished R Runs Allowed SH Sacrifices by opposing batters SF Sacrifice flies by opposing batters GIDP Grounded into double plays by opposing batter\n\nHistory_of_Baseball &lt;- read_csv(\"data/The History of Baseball dataset/pitching.csv\")\n\nRows: 44139 Columns: 30\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): player_id, team_id, league_id\ndbl (27): year, stint, w, l, g, gs, cg, sho, sv, ipouts, h, er, hr, bb, so, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nstr(History_of_Baseball)\n\nspc_tbl_ [44,139 × 30] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ player_id: chr [1:44139] \"bechtge01\" \"brainas01\" \"fergubo01\" \"fishech01\" ...\n $ year     : num [1:44139] 1871 1871 1871 1871 1871 ...\n $ stint    : num [1:44139] 1 1 1 1 1 1 1 1 1 1 ...\n $ team_id  : chr [1:44139] \"PH1\" \"WS3\" \"NY2\" \"RC1\" ...\n $ league_id: chr [1:44139] NA NA NA NA ...\n $ w        : num [1:44139] 1 12 0 4 0 0 0 6 18 12 ...\n $ l        : num [1:44139] 2 15 0 16 1 0 1 11 5 15 ...\n $ g        : num [1:44139] 3 30 1 24 1 1 3 19 25 29 ...\n $ gs       : num [1:44139] 3 30 0 24 1 0 1 19 25 29 ...\n $ cg       : num [1:44139] 2 30 0 22 1 0 1 19 25 28 ...\n $ sho      : num [1:44139] 0 0 0 1 0 0 0 1 0 0 ...\n $ sv       : num [1:44139] 0 0 0 0 0 0 0 0 0 0 ...\n $ ipouts   : num [1:44139] 78 792 3 639 27 3 39 507 666 747 ...\n $ h        : num [1:44139] 43 361 8 295 20 1 20 261 285 430 ...\n $ er       : num [1:44139] 23 132 3 103 10 0 5 97 113 153 ...\n $ hr       : num [1:44139] 0 4 0 3 0 0 0 5 3 4 ...\n $ bb       : num [1:44139] 11 37 0 31 3 0 3 21 40 75 ...\n $ so       : num [1:44139] 1 13 0 15 0 0 1 17 15 12 ...\n $ baopp    : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ era      : num [1:44139] 7.96 4.5 27 4.35 10 0 3.46 5.17 4.58 5.53 ...\n $ ibb      : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ wp       : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ hbp      : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ bk       : num [1:44139] 0 0 0 0 0 0 0 2 0 0 ...\n $ bfp      : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ gf       : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ r        : num [1:44139] 42 292 9 257 21 0 30 243 223 362 ...\n $ sh       : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ sf       : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n $ g_idp    : num [1:44139] NA NA NA NA NA NA NA NA NA NA ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   player_id = col_character(),\n  ..   year = col_double(),\n  ..   stint = col_double(),\n  ..   team_id = col_character(),\n  ..   league_id = col_character(),\n  ..   w = col_double(),\n  ..   l = col_double(),\n  ..   g = col_double(),\n  ..   gs = col_double(),\n  ..   cg = col_double(),\n  ..   sho = col_double(),\n  ..   sv = col_double(),\n  ..   ipouts = col_double(),\n  ..   h = col_double(),\n  ..   er = col_double(),\n  ..   hr = col_double(),\n  ..   bb = col_double(),\n  ..   so = col_double(),\n  ..   baopp = col_double(),\n  ..   era = col_double(),\n  ..   ibb = col_double(),\n  ..   wp = col_double(),\n  ..   hbp = col_double(),\n  ..   bk = col_double(),\n  ..   bfp = col_double(),\n  ..   gf = col_double(),\n  ..   r = col_double(),\n  ..   sh = col_double(),\n  ..   sf = col_double(),\n  ..   g_idp = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nhead(History_of_Baseball)\n\n# A tibble: 6 × 30\n  player_id  year stint team_id league_id     w     l     g    gs    cg   sho\n  &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 bechtge01  1871     1 PH1     &lt;NA&gt;          1     2     3     3     2     0\n2 brainas01  1871     1 WS3     &lt;NA&gt;         12    15    30    30    30     0\n3 fergubo01  1871     1 NY2     &lt;NA&gt;          0     0     1     0     0     0\n4 fishech01  1871     1 RC1     &lt;NA&gt;          4    16    24    24    22     1\n5 fleetfr01  1871     1 NY2     &lt;NA&gt;          0     1     1     1     1     0\n6 flowedi01  1871     1 TRO     &lt;NA&gt;          0     0     1     0     0     0\n# ℹ 19 more variables: sv &lt;dbl&gt;, ipouts &lt;dbl&gt;, h &lt;dbl&gt;, er &lt;dbl&gt;, hr &lt;dbl&gt;,\n#   bb &lt;dbl&gt;, so &lt;dbl&gt;, baopp &lt;dbl&gt;, era &lt;dbl&gt;, ibb &lt;dbl&gt;, wp &lt;dbl&gt;, hbp &lt;dbl&gt;,\n#   bk &lt;dbl&gt;, bfp &lt;dbl&gt;, gf &lt;dbl&gt;, r &lt;dbl&gt;, sh &lt;dbl&gt;, sf &lt;dbl&gt;, g_idp &lt;dbl&gt;\n\n\n\nggplot(History_of_Baseball) +\n  geom_line(aes(x=year, y=w))",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>BasirVis</span>"
    ]
  },
  {
    "objectID": "SidneyViz.html",
    "href": "SidneyViz.html",
    "title": "Appendix B — Sidney Viz",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(shiny)\nsalary &lt;- read.csv(\"data/The History of Baseball dataset/salary.csv\")\npitching &lt;- read.csv(\"data/The History of Baseball dataset/pitching.csv\")\nbatting &lt;- read.csv(\"data/The History of Baseball dataset/batting.csv\")\n\n\nhead(salary)\n\n  year team_id league_id player_id salary\n1 1985     ATL        NL barkele01 870000\n2 1985     ATL        NL bedrost01 550000\n3 1985     ATL        NL benedbr01 545000\n4 1985     ATL        NL  campri01 633333\n5 1985     ATL        NL ceronri01 625000\n6 1985     ATL        NL chambch01 800000\n\nhead(pitching)\n\n  player_id year stint team_id league_id  w  l  g gs cg sho sv ipouts   h  er\n1 bechtge01 1871     1     PH1            1  2  3  3  2   0  0     78  43  23\n2 brainas01 1871     1     WS3           12 15 30 30 30   0  0    792 361 132\n3 fergubo01 1871     1     NY2            0  0  1  0  0   0  0      3   8   3\n4 fishech01 1871     1     RC1            4 16 24 24 22   1  0    639 295 103\n5 fleetfr01 1871     1     NY2            0  1  1  1  1   0  0     27  20  10\n6 flowedi01 1871     1     TRO            0  0  1  0  0   0  0      3   1   0\n  hr bb so baopp   era ibb wp hbp bk bfp gf   r sh sf g_idp\n1  0 11  1    NA  7.96  NA NA  NA  0  NA NA  42 NA NA    NA\n2  4 37 13    NA  4.50  NA NA  NA  0  NA NA 292 NA NA    NA\n3  0  0  0    NA 27.00  NA NA  NA  0  NA NA   9 NA NA    NA\n4  3 31 15    NA  4.35  NA NA  NA  0  NA NA 257 NA NA    NA\n5  0  3  0    NA 10.00  NA NA  NA  0  NA NA  21 NA NA    NA\n6  0  0  0    NA  0.00  NA NA  NA  0  NA NA   0 NA NA    NA\n\n#merging salary and pitching data\nsal_pitch &lt;- salary %&gt;% \n  left_join(pitching)\n\nJoining with `by = join_by(year, team_id, league_id, player_id)`\n\n#merging salary and batting data\nsal_bat &lt;- salary %&gt;% \n  left_join(batting)\n\nJoining with `by = join_by(year, team_id, league_id, player_id)`\n\n#cleaning up variable names\nsal_bat_2 &lt;- sal_bat %&gt;% \n  rename(games = g,\n         at_bats = ab,\n         runs = r,\n         hits = h,\n         home_runs = hr,\n         stolen_bases = sb,\n         caught_stealing = cs,\n         strikeouts = so) %&gt;% \n  select(year, team_id, player_id, salary, games, at_bats, runs, hits, double, triple, home_runs, stolen_bases, caught_stealing, strikeouts) %&gt;% \n  mutate(batting_avg = hits/at_bats)\n\nwin_loss &lt;- pitching %&gt;% \n  filter(year &gt;= 1985) %&gt;% \n  select(player_id, year, team_id, league_id, w, l, g) %&gt;% \n  left_join(sal_bat_2)\n\nJoining with `by = join_by(player_id, year, team_id)`\n\n\nWarning in left_join(., sal_bat_2): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 5897 of `x` matches multiple rows in `y`.\nℹ Row 8624 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# UI to select filters\nsidebarLayout(\n  sidebarPanel(\n    sliderInput(\"top_n\", \n                \"Select Top N Players by Strikeouts:\", \n                min = 5, max = 50, value = 10, step = 5),\n    selectInput(\"filter_team\", \n                \"Filter by Team (Optional):\", \n                choices = c(\"All\", unique(pitching$team_id)), \n                selected = \"All\")\n  ),\n  mainPanel(\n    plotOutput(\"hr_bb_plot\")\n  )\n)\n\n\n\n\n\nSelect Top N Players by Strikeouts:\n\n\n\nFilter by Team (Optional):\n\nAll\nPH1\nWS3\nNY2\nRC1\nTRO\nFW1\nCL1\nCH1\nBS1\nMID\nBR2\nBL1\nBR1\nWS4\nPH2\nELI\nBL4\nWS5\nCH2\nHR1\nPH3\nSL1\nSL2\nKEO\nNH1\nWS6\nCHN\nSL3\nHAR\nCN1\nNY3\nBSN\nLS1\nPHN\nPRO\nML2\nIN1\nTRN\nSR1\nBFN\nCL2\nWOR\nDTN\nPT1\nLS2\nSL4\nBL2\nPH4\nCN2\nNY1\nPHI\nCL5\nNY4\nBLU\nCHU\nIN2\nKCU\nWIL\nPHU\nMLU\nWS7\nBSU\nSLU\nCNU\nTL1\nSPU\nALT\nBR3\nRIC\nWSU\nSL5\nWS8\nKCN\nCL3\nPIT\nIN3\nKC2\nCL4\nCL6\nTL2\nCLP\nBL3\nBFP\nBRO\nCHP\nRC2\nPHP\nSR2\nNYP\nBR4\nBSP\nPTP\nCIN\nBRP\nWS9\nCN3\nBS2\nML3\nWAS\nSLN\nBLN\nLS3\nCLE\nPHA\nBOS\nBLA\nCHA\nWS1\nDET\nMLA\nSLA\nNYA\nKCF\nPTF\nBLF\nBUF\nIND\nCHF\nBRF\nSLF\nNEW\nML1\nBAL\nKC1\nSFN\nLAN\nMIN\nWS2\nLAA\nNYN\nHOU\nCAL\nATL\nOAK\nSE1\nSDN\nKCA\nMON\nML4\nTEX\nSEA\nTOR\nCOL\nFLO\nANA\nARI\nTBA\nMIL\nMIA\n\n\n\n\n\n\n\n\n\n\n# Server logic\nrenderPlot({\n  # Filter and sort data\n  filtered_data &lt;- pitching %&gt;%\n    filter(if (input$filter_team != \"All\") team_id == input$filter_team else TRUE) %&gt;%\n    arrange(desc(hr)) %&gt;%\n    slice_head(n = input$top_n)  # Top N players\n  \n  ggplot(filtered_data, aes(x = bb, y = so, color = player_id, label = player_id)) +\n    geom_point(size = 3, alpha = 0.7) +\n    geom_text(vjust = -0.5, size = 3) +\n    labs(title = \"Strikeouts vs. Walks\", \n         x = \"Walks (BB)\", y = \"Strikeouts (SO)\") +\n    theme_minimal() +\n    theme(legend.position = \"none\")\n\n})\n\n\n\n\n\n#strikeouts vs wins since 1985\npitching %&gt;% \n  filter(year &gt;= 1985, so &gt;= 5) %&gt;% \n  ggplot(aes(x = so, y = w)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Strikeouts vs Wins since 1985\", x = \"Strikeouts (SO)\", y = \"Wins (W)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n#batting avg vs wins since 1985\nbat_sm &lt;- batting %&gt;% \n  mutate(batt_avg = h/ab) %&gt;% \n  select(player_id, year, batt_avg)\n\npitching_2 &lt;- pitching %&gt;% \n  filter(year &gt;= 1985) %&gt;% \n  left_join(bat_sm)\n\nJoining with `by = join_by(player_id, year)`\n\n\nWarning in left_join(., bat_sm): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 7 of `x` matches multiple rows in `y`.\nℹ Row 62248 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\npitching_2 %&gt;% \n  filter(!is.na(batt_avg)) %&gt;% \n  ggplot(aes(x = batt_avg, y = w, group = team_id)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n# salary vs batting avg\nsal_bat_2 %&gt;% \n  filter(at_bats &gt; 10, salary != 0) %&gt;% \nggplot(aes(x = batting_avg, y = salary, color = home_runs)) +\n  geom_point() +\n  labs(title = \"salary vs batting avg\")\n\n\n\n\n\n\n\n# salary vs hits\n# ggplot(aes(x = hits, y = salary), data = sal_bat_2) +\n#   geom_point() +\n#   labs(title = \"salary vs hits\")\n# \n# salary vs home runs\nsal_bat_2 %&gt;% \n    filter(at_bats &gt; 10, salary != 0) %&gt;% \nggplot(aes(x = home_runs, y = salary)) +\n  geom_point() +\n  labs(title = \"salary vs home runs\")\n\n\n\n\n\n\n\n# \n# # salary vs batting avg for 1990\n# sal_bat_2 %&gt;% \n#   filter(year == '1990') %&gt;% \n#   ggplot(aes(x = batting_avg, y = salary)) +\n#   geom_point() +\n#   labs(title = \"salary vs batting avg in 1990\")\n\n\n#home run exploration\nsal_bat_2 %&gt;%\n  filter(home_runs != 0) %&gt;% \n  #group_by(home_runs) %&gt;% \n  summarise(n(), average = mean(home_runs))\n\n    n()  average\n1 12028 10.44662\n\nsal_bat_2 %&gt;% \n  filter(home_runs &gt; 10, salary != 0) %&gt;% \n  na.omit(home_runs) %&gt;% \n  ggplot(aes(x = home_runs)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n#at bat exploration\nsal_bat_2 %&gt;% \n  summarise(bat_avg = mean(at_bats, na.rm = TRUE), sal_avg = mean(salary, na.rm = TRUE))\n\n   bat_avg sal_avg\n1 187.3511 2008100\n\nsal_bat_2 %&gt;% \n  filter(at_bats &gt;= 100, salary != 0, year &gt;= 2000, batting_avg &gt;= .3) %&gt;% \n  ggplot(aes(x = batting_avg, y = salary)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n# win_loss %&gt;%\n#   ggplot(aes(x = team_id, group = league_id)) +\n#     geom_bar(aes(y = w, fill = \"Wins\"), stat = \"identity\", position = \"dodge\",alpha = 0.4) +\n#     geom_bar(aes(y = l, fill = \"Losses\"), stat = \"identity\", position = \"dodge\",alpha = 0.4)\n# \n# win_loss %&gt;% \n#   ggplot(aes(x = batting_avg, y = w, color = team_id)) +\n#   geom_point()",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Sidney Viz</span>"
    ]
  },
  {
    "objectID": "harlanviz.html",
    "href": "harlanviz.html",
    "title": "",
    "section": "",
    "text": "AppendicesC  harlanviz.html Code",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>harlanviz.html</span>"
    ]
  },
  {
    "objectID": "Huthaifa'sVis.html",
    "href": "Huthaifa'sVis.html",
    "title": "Appendix D — Interactive Wins and Losses by Decade",
    "section": "",
    "text": "# Define UI for selecting a decade\nselectInput(\"selected_decade\", \n            \"Choose a Decade:\", \n            choices = unique(pitching$decade), \n            selected = unique(pitching$decade)[1])\n\n\nChoose a Decade:\n\n1870s\n1880s\n1890s\n1900s\n1910s\n1920s\n1930s\n1940s\n1950s\n1960s\n1970s\n1980s\n1990s\n2000s\n2010s\n\n\n\n\n# Render the plot dynamically\nrenderPlot({\n  filtered_data &lt;- pitching %&gt;% filter(decade == input$selected_decade)\n  \n  ggplot(filtered_data, aes(x = team_id, group = league_id)) +\n    geom_bar(aes(y = w, fill = \"Wins\"), stat = \"identity\", position = \"dodge\",alpha = 0.4) +\n    geom_bar(aes(y = l, fill = \"Losses\"), stat = \"identity\", position = \"dodge\",alpha = 0.4) +\n    labs(title = paste(\"Wins and Losses in\", input$selected_decade), \n         x = \"Year\", y = \"Count\") +\n    scale_fill_manual(values = c(\"Wins\" = \"blue\", \"Losses\" = \"red\")) +\n    theme_minimal()+\n    theme(axis.text.x = element_text(angle = 45, hjust = 1))# Rotate team labels for clarity\n\n})\n\n\n\n\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\n# UI to select filters\nsidebarLayout(\n  sidebarPanel(\n    sliderInput(\"top_n\", \n                \"Select Top N Players by Home Runs:\", \n                min = 5, max = 50, value = 10, step = 5),\n    selectInput(\"filter_team\", \n                \"Filter by Team (Optional):\", \n                choices = c(\"All\", unique(pitching$team_id)), \n                selected = \"All\")\n  ),\n  mainPanel(\n    plotOutput(\"hr_bb_plot\")\n  )\n)\n\n\n\n\n\nSelect Top N Players by Home Runs:\n\n\n\nFilter by Team (Optional):\n\nAll\nPH1\nWS3\nNY2\nRC1\nTRO\nFW1\nCL1\nCH1\nBS1\nMID\nBR2\nBL1\nBR1\nWS4\nPH2\nELI\nBL4\nWS5\nCH2\nHR1\nPH3\nSL1\nSL2\nKEO\nNH1\nWS6\nCHN\nSL3\nHAR\nCN1\nNY3\nBSN\nLS1\nPHN\nPRO\nML2\nIN1\nTRN\nSR1\nBFN\nCL2\nWOR\nDTN\nPT1\nLS2\nSL4\nBL2\nPH4\nCN2\nNY1\nPHI\nCL5\nNY4\nBLU\nCHU\nIN2\nKCU\nWIL\nPHU\nMLU\nWS7\nBSU\nSLU\nCNU\nTL1\nSPU\nALT\nBR3\nRIC\nWSU\nSL5\nWS8\nKCN\nCL3\nPIT\nIN3\nKC2\nCL4\nCL6\nTL2\nCLP\nBL3\nBFP\nBRO\nCHP\nRC2\nPHP\nSR2\nNYP\nBR4\nBSP\nPTP\nCIN\nBRP\nWS9\nCN3\nBS2\nML3\nWAS\nSLN\nBLN\nLS3\nCLE\nPHA\nBOS\nBLA\nCHA\nWS1\nDET\nMLA\nSLA\nNYA\nKCF\nPTF\nBLF\nBUF\nIND\nCHF\nBRF\nSLF\nNEW\nML1\nBAL\nKC1\nSFN\nLAN\nMIN\nWS2\nLAA\nNYN\nHOU\nCAL\nATL\nOAK\nSE1\nSDN\nKCA\nMON\nML4\nTEX\nSEA\nTOR\nCOL\nFLO\nANA\nARI\nTBA\nMIL\nMIA\n\n\n\n\n\n\n\n\n\n\n# Server logic\nrenderPlot({\n  # Filter and sort data\n  filtered_data &lt;- pitching %&gt;%\n    filter(if (input$filter_team != \"All\") team_id == input$filter_team else TRUE) %&gt;%\n    arrange(desc(hr)) %&gt;%\n    slice_head(n = input$top_n)  # Top N players\n  \n  ggplot(filtered_data, aes(x = bb, y = hr, color = player_id, label = player_id)) +\n    geom_point(size = 3, alpha = 0.7) +\n    geom_text(vjust = -0.5, size = 3) +\n    labs(title = \"Home Runs vs. Walks\", \n         x = \"Walks (BB)\", y = \"Home Runs (HR)\") +\n    theme_minimal() +\n    theme(legend.position = \"none\")\n\n})",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>D</span>  <span class='chapter-title'>Interactive Wins and Losses by Decade</span>"
    ]
  },
  {
    "objectID": "draftsalaryviz.html",
    "href": "draftsalaryviz.html",
    "title": "",
    "section": "",
    "text": "AppendicesE  draftsalaryviz.html Code",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>E</span>  <span class='chapter-title'>draftsalaryviz.html</span>"
    ]
  },
  {
    "objectID": "reportDRAFT.html",
    "href": "reportDRAFT.html",
    "title": "Appendix F — Report Draft",
    "section": "",
    "text": "F.0.1 Introduction\nBaseball is one of the most popular sports in the US with millions of viewers each year. There are many factors that contribute to team wins and we would like to explore potential factors contributing to these wins. With this popularity comes a plethora of interesting data, from batting averages to different measures of success in the field to All-Star players per team. Using this data going as far back as the 1870s, we decided to look into what factors can predict team wins over time. With billions of dollars pouring into the MLB (Major League Baseball) each year, finding potential predictors of which teams will win is quite literally a billion dollar question. Throughout this report, we will explore different relationships between the variable wins and several predictor variables.\nIn order to best understand this report, a few terms must be clarified. Firstly, wins refer to the number of games won by a team, while losses refers to the number of games lost by a team. A strikeout is when the pitcher throws three strikes, valid pitches that the batter does not hit, causing the batter to be out and finished with their batting turn. Finally, batting average is a decimal value representing the number of successful hits made by a single batter divided by their total number of hitting attempts.\nThis data was acquired from Kaggle. This data set, titled ‘The History of Baseball’ is a reformatted version of a famous data set by Sean Lahman. This data, originally published in the 1990s was the first of its kind, making raw baseball data accessible to the public. This data was most recently updated for the 2015 season, and contains data between 2015 and 1871. Lahman’s data set is actually a collection of several data sets, ranging from pitching data, to data on team managers. For our analysis, we focus on the pitching and batting data sets, which contain information on wins, losses, pitching stats, batting stats, and salary information per player per year. In order to complete our analysis, we have joined the batting and pitching data sets together, added a new variable batting_avg, and cleaned the variable names. The variables are a mix between categorical (player names, team names, etc) and quantitative (wins, losses, batting average, etc).\n#TODO: Add numerical summaries?",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Report Draft</span>"
    ]
  },
  {
    "objectID": "reportDRAFT.html#wins-and-losses-per-team",
    "href": "reportDRAFT.html#wins-and-losses-per-team",
    "title": "Appendix F — Report Draft",
    "section": "F.1 Wins and Losses per Team",
    "text": "F.1 Wins and Losses per Team\n\n\n\n\n\n\n\nF.1.1 Data Insights\nWhat are the important takeaways from the data? What was interesting?\nImportant takeaways from this data lie in the team wins above 20 with corresponding losses below 20. Seeing parity (and lack thereof) has been one of the key points of MLB competition for hundreds of years. It’s always key to notice where teams took steps forwards.\nWhy do these takeaways matter?\nThese takeaways matter because the data determines competition leaguewide when nothing else can. It’s an interesting graph because it helps the league realize where they can go further in terms of competitive parity.\nWas there anything surprising?\nIt wasn’t a super surprising result.\nOverall, what do you want the audience to walk away with? What do you want them to understand about your data and research questions?!?\nLooking at this visualization of baseball team performance in the 1870s, several interesting patterns emerge. The data reveals a generally competitive era in baseball, with most teams maintaining relatively balanced win-loss ratios. BRK1 stands out as a particularly successful team with around 50 wins and comparatively fewer losses, while teams like BL1 and BSN show more evenly matched records. Intriguingly, there’s significant variation in the total number of games played across teams, with the WS3-WS6 teams consistently showing lower game counts, possibly indicating partial seasons or specific competition subsets. The similar patterns between teams with related names (like CL1 and CL2) suggest potential franchise relationships or organizational changes during this period. Overall, the data paints a picture of a competitive baseball landscape in the 2000s, where extreme dominance or poor performance was rare, and most teams maintained relatively stable performance levels.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Report Draft</span>"
    ]
  },
  {
    "objectID": "reportDRAFT.html#strikeouts-vs-wins-since-1985",
    "href": "reportDRAFT.html#strikeouts-vs-wins-since-1985",
    "title": "Appendix F — Report Draft",
    "section": "F.2 Strikeouts vs Wins since 1985",
    "text": "F.2 Strikeouts vs Wins since 1985\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nF.2.1 Data Insights\nWhat are the important takeaways from the data? What was interesting?\nThe key takeaway from this visualization is that there is an increase in wins that comes with an increase in strikeouts (a negative outcome for the hitter) but only to a certain level. Past a certain level, the strikeouts begin to hinder the team enough to cap wins at about 20 with some outliers.\nWhy do these takeaways matter?\nThese takeaways matter because strikeouts are one of the most influential statistics in baseball. They have defined the game for decades and especially in the modern era. Defining their relationship to wins in the big picture could be important for GMs in the major leagues.\nWas there anything surprising?\nIt was a mostly expected report, but it is interesting to examine the outliers and what those came out to be. Striking out more while winning more is often where the best home run hitters live, and striking out less while winning more is where hitters with a bat-to-ball approach thrive.\nOverall, what do you want the audience to walk away with? What do you want them to understand about your data and research questions?!?\nThe scatter plot analyzing the relationship between strikeouts and wins in baseball since 1985 reveals several fascinating patterns. A clear positive correlation exists, as indicated by the blue trend line, showing that pitchers who record more strikeouts generally secure more wins. The data displays distinct horizontal banding, reflecting the discrete nature of baseball wins, with most pitchers recording between 50-250 strikeouts and winning between 0-25 games per season. Notably, while the relationship between strikeouts and wins is strong, the increasing spread of data points at higher strikeout counts suggests that other factors also influence a pitcher’s win total. Some remarkable outliers exist, particularly among pitchers with 300+ strikeouts, highlighting exceptional performances that deviate from the typical pattern. This visualization effectively demonstrates that while strikeout ability is a good predictor of winning games, it’s not the only factor determining a pitcher’s success.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Report Draft</span>"
    ]
  },
  {
    "objectID": "reportDRAFT.html#batting-average-vs-wins-since-1985",
    "href": "reportDRAFT.html#batting-average-vs-wins-since-1985",
    "title": "Appendix F — Report Draft",
    "section": "F.3 Batting Average VS Wins Since 1985",
    "text": "F.3 Batting Average VS Wins Since 1985\n\n\nJoining with `by = join_by(player_id, year)`\n\n\nWarning in left_join(., bat_sm): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 7 of `x` matches multiple rows in `y`.\nℹ Row 62248 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nF.3.1 Data Insights\nWhat are the important takeaways from the data? What was interesting?\nThis graph displays the lack of parity due to salary in MLB. It is interesting to see which teams are spending more and how often, because this often dictates team performance. It is also interesting to see how under-funded some teams are in a league where all teams are supposedly competitive.\nWhy do these takeaways matter?\nThese takeaways matter because salary distribution directly affects team performance. Seeing the lack of parity is key to understanding the affects of salary upon wins.\nWas there anything surprising?\nMostly surprising was the lowest spenders, some of whom have spent barely half as much as the higher value teams.\nOverall, what do you want the audience to walk away with? What do you want them to understand about your data and research questions?!?\nViewers should understand the direct effects of salary distribution on the lack of parity in the league. The extreme salary differentials are a significant reason why some teams win a lot, while others are bottom-dwellers.\n\n\nF.3.2 Conclusion/Big Picture\nHow do the insights connect to answer your research question?\nAll of our team’s plots helped further explore what contributes to teams’ success in baseball. By examining the effects of different variables on win outcomes, we were able to draw many conclusions about what helped and hindered teams in MLB over a long period of time.\nWhat improvements might someone make to your analysis?\nIf our group had time to extend our research, furthering our knowledge of the data would allow us to improve clarity in our graphs. Figuring out how to build in the Shiny aspect would have been a great addition as well.\nAre there any limitations or weaknesses of your data / analysis?\nA weakness is how cluttered the dataset was. If it was neater, it would been easier to use.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>F</span>  <span class='chapter-title'>Report Draft</span>"
    ]
  }
]